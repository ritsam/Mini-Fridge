type Food_log {
  created_at: DateTime
  food_id: String
  id: Int!
  kcal: Int
  label: String
  user_id: String
  image: String
}

type KcalTotalForDate {
  total_kcal: Int
}

type Grocery_list {
  created_at: DateTime
  food_id: String
  id: Int!
  kcal: Int
  label: String
  user_id: String
  image: String
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'Food_log' "
  food_logByFood_id(food_id: String!): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )

  food_logByFood_idAndLabel(food_id: String!, label: String!): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )
  food_logList: [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      configuration: "postgresql_config"
    )
  food_logPaginatedList(first: Int, after: Int): [Food_log]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "created_at", "food_id", "id", "kcal", "label", "user_id", "image" FROM "food_log" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )

  foodLogsForUser(user_id: String!): [Food_log]
    @dbquery(
      type: "postgresql"
      query: "SELECT * FROM food_log WHERE user_id = $1 ORDER BY created_at DESC;"
      configuration: "postgresql_config"
    ) 

    groceryListForUser(user_id: String!): [Grocery_list]
    @dbquery(
      type: "postgresql"
      query: "SELECT * FROM grocery_list WHERE user_id = $1 ORDER BY id DESC;"
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Food_log' "
  deleteFood_log(
    label: String!
    food_id: String!
    kcal: Int!
    user_id: String!
    id: Int!
    created_at: DateTime!
    image: String!
  ): Food_log
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertFood_log(
    label: String
    food_id: String
    kcal: Int
    user_id: String
    image: String
  ): Food_log
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "food_log"
      dml: INSERT
      configuration: "postgresql_config"
    )
    
  deleteFood_logById(id: Int!): Food_log
    @dbquery(
      type: "postgresql"
      query: """
        DELETE FROM food_log WHERE id = $1 RETURNING *
      """
      configuration: "postgresql_config"
    )

  insertGrocery_list(
    user_id: String
    label: String
    kcal: Int
    image: String
    food_id: String
  ): Grocery_list
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "grocery_list"
      dml: INSERT
      configuration: "postgresql_config"
    )  

    deleteGroceryItemById(id: Int!): Grocery_list
    @dbquery(
      type: "postgresql"
      query: """
        DELETE FROM grocery_list WHERE id = $1 RETURNING *
      """
      configuration: "postgresql_config"
    )
}